// <auto-generated />
using System;
using BikeShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeShop.Data.Migrations.BikeShop
{
    [DbContext(typeof(BikeShopContext))]
    partial class BikeShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BikeShop.Data.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Dries",
                            Name = "Yperman"
                        });
                });

            modelBuilder.Entity("BikeShop.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Trek",
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Specialized",
                            Price = 200m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Giant",
                            Price = 300m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cannondale",
                            Price = 400m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Scott",
                            Price = 500m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Bianchi",
                            Price = 600m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Cervelo",
                            Price = 700m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Pinarello",
                            Price = 800m
                        },
                        new
                        {
                            Id = 9,
                            Name = "Trek",
                            Price = 900m
                        },
                        new
                        {
                            Id = 10,
                            Name = "Specialized",
                            Price = 1000m
                        },
                        new
                        {
                            Id = 11,
                            Name = "Giant",
                            Price = 1100m
                        },
                        new
                        {
                            Id = 12,
                            Name = "Cannondale",
                            Price = 1200m
                        },
                        new
                        {
                            Id = 13,
                            Name = "Scott",
                            Price = 1300m
                        },
                        new
                        {
                            Id = 14,
                            Name = "Bianchi",
                            Price = 1400m
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cervelo",
                            Price = 1500m
                        },
                        new
                        {
                            Id = 16,
                            Name = "Pinarello",
                            Price = 1600m
                        },
                        new
                        {
                            Id = 17,
                            Name = "Trek",
                            Price = 1700m
                        },
                        new
                        {
                            Id = 18,
                            Name = "Specialized",
                            Price = 1800m
                        },
                        new
                        {
                            Id = 19,
                            Name = "Giant",
                            Price = 1900m
                        },
                        new
                        {
                            Id = 20,
                            Name = "Cannondale",
                            Price = 2000m
                        },
                        new
                        {
                            Id = 21,
                            Name = "Scott",
                            Price = 2100m
                        },
                        new
                        {
                            Id = 22,
                            Name = "Bianchi",
                            Price = 2200m
                        },
                        new
                        {
                            Id = 23,
                            Name = "Cervelo",
                            Price = 2300m
                        },
                        new
                        {
                            Id = 24,
                            Name = "Pinarello",
                            Price = 2400m
                        },
                        new
                        {
                            Id = 25,
                            Name = "Trek",
                            Price = 2500m
                        },
                        new
                        {
                            Id = 26,
                            Name = "Specialized",
                            Price = 2600m
                        },
                        new
                        {
                            Id = 27,
                            Name = "Giant",
                            Price = 2700m
                        },
                        new
                        {
                            Id = 28,
                            Name = "Cannondale",
                            Price = 2800m
                        },
                        new
                        {
                            Id = 29,
                            Name = "Scott",
                            Price = 2900m
                        },
                        new
                        {
                            Id = 30,
                            Name = "Bianchi",
                            Price = 3000m
                        },
                        new
                        {
                            Id = 31,
                            Name = "Cervelo",
                            Price = 3100m
                        },
                        new
                        {
                            Id = 32,
                            Name = "Pinarello",
                            Price = 3200m
                        },
                        new
                        {
                            Id = 33,
                            Name = "Trek",
                            Price = 3300m
                        },
                        new
                        {
                            Id = 34,
                            Name = "Specialized",
                            Price = 3400m
                        },
                        new
                        {
                            Id = 35,
                            Name = "Giant",
                            Price = 3500m
                        },
                        new
                        {
                            Id = 36,
                            Name = "Cannondale",
                            Price = 3600m
                        },
                        new
                        {
                            Id = 37,
                            Name = "Scott",
                            Price = 3700m
                        },
                        new
                        {
                            Id = 38,
                            Name = "Bianchi",
                            Price = 3800m
                        },
                        new
                        {
                            Id = 39,
                            Name = "Cervelo",
                            Price = 3900m
                        },
                        new
                        {
                            Id = 40,
                            Name = "Pinarello",
                            Price = 4000m
                        },
                        new
                        {
                            Id = 41,
                            Name = "Trek",
                            Price = 4100m
                        },
                        new
                        {
                            Id = 42,
                            Name = "Specialized",
                            Price = 4200m
                        },
                        new
                        {
                            Id = 43,
                            Name = "Giant",
                            Price = 4300m
                        },
                        new
                        {
                            Id = 44,
                            Name = "Cannondale",
                            Price = 4400m
                        },
                        new
                        {
                            Id = 45,
                            Name = "Scott",
                            Price = 4500m
                        },
                        new
                        {
                            Id = 46,
                            Name = "Bianchi",
                            Price = 4600m
                        },
                        new
                        {
                            Id = 47,
                            Name = "Cervelo",
                            Price = 4700m
                        },
                        new
                        {
                            Id = 48,
                            Name = "Pinarello",
                            Price = 4800m
                        },
                        new
                        {
                            Id = 49,
                            Name = "Trek",
                            Price = 4900m
                        });
                });

            modelBuilder.Entity("BikeShop.Data.Entities.ShoppingBag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShoppingBags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Date = new DateTime(2023, 3, 28, 16, 9, 32, 660, DateTimeKind.Local).AddTicks(7982)
                        });
                });

            modelBuilder.Entity("BikeShop.Data.Entities.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingBagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingBagId");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("BikeShop.Data.Entities.ShoppingBag", b =>
                {
                    b.HasOne("BikeShop.Data.Entities.Customer", "Customer")
                        .WithMany("ShoppingBags")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BikeShop.Data.Entities.ShoppingItem", b =>
                {
                    b.HasOne("BikeShop.Data.Entities.Product", "Product")
                        .WithMany("ShoppingItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeShop.Data.Entities.ShoppingBag", "ShoppingBag")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingBagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingBag");
                });

            modelBuilder.Entity("BikeShop.Data.Entities.Customer", b =>
                {
                    b.Navigation("ShoppingBags");
                });

            modelBuilder.Entity("BikeShop.Data.Entities.Product", b =>
                {
                    b.Navigation("ShoppingItems");
                });

            modelBuilder.Entity("BikeShop.Data.Entities.ShoppingBag", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
